#!/usr/bin/env ruby
# timekeeper

# 20140128
# 0.1.1

require 'DatelessTime'

total_hours_worked = 0

file = File.read(ARGV[0])
dates_and_times = file.split("\n")
dates_and_times = dates_and_times.reject{|line| line =~ /^#/}
dates_and_times = dates_and_times.select{|line| line =~ /;/}
dates_and_times.each do |date_and_times|
  day, day_periods = date_and_times.split(';').first, date_and_times.split(';').last
  days_hours_worked = 0
  day_periods.split(',').each do |day_period, index|
    beginning_of_period, end_of_period = day_period.strip.split('-')
    beginning_of_period = beginning_of_period.strip
    end_of_period = end_of_period.strip
    begin_time = DatelessTime.new(beginning_of_period).to_time
    end_time = DatelessTime.new(end_of_period).to_time
    days_hours_worked += (end_time - begin_time)/60/60
  end
  puts day + ' ' + days_hours_worked.round(2).to_s
  total_hours_worked += days_hours_worked
end

p total_hours_worked
p total_money_owed = total_hours_worked * 70

file = File.read(ARGV[0])
lines = file.split("\n")
invoice_lines = lines.select{|line| line =~ /^_/}
invoice_amounts = invoice_lines.collect do |invoice_line|
  invoice_line.split(',').last.strip.tr('$', '')
end
p total_money_invoiced = invoice_amounts.collect(&:to_i).inject(0){|total_amount, invoice_amount| total_amount + invoice_amount}

p difference = total_money_owed - total_money_invoiced

p hours_difference = difference/70
